// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QIMSchoolPro.Thesis.Persistence;

#nullable disable

namespace QIMSchoolPro.Thesis.Persistence.Migrations
{
    [DbContext(typeof(ThesisDbContext))]
    [Migration("20240321130930_OralExamination")]
    partial class OralExamination
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.AcademicConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<int>("Group")
                        .HasColumnType("integer");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AcademicConfiguration", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TranscriptCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Certificate", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DocumentType")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("Document", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.ExaminerReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ThesisAssignmentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ThesisAssignmentId");

                    b.ToTable("ExaminerReport", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("GradeParamId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Marks")
                        .HasColumnType("numeric");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ThesisAssignmentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("GradeParamId");

                    b.HasIndex("ThesisAssignmentId");

                    b.ToTable("Grade", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.GradeParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MaxMarks")
                        .HasColumnType("numeric");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GradeParam", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.OralExamination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExaminationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("OralExamination", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Party", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DisabilityReason")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FaxNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("IsDisability")
                        .HasColumnType("boolean");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PartyType")
                        .HasColumnType("integer");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Party", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Programme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CertificateId")
                        .HasColumnType("integer");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Programme", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<string>("StaffNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PartyId");

                    b.ToTable("Staff", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Student", b =>
                {
                    b.Property<string>("StudentNumber")
                        .HasColumnType("text");

                    b.Property<int>("AcademicCycle")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("IndexNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<int>("ProgrammeId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentSection")
                        .HasColumnType("integer");

                    b.Property<int?>("StudentStatus")
                        .HasColumnType("integer");

                    b.Property<string>("StudentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("StudentNumber");

                    b.HasIndex("PartyId");

                    b.HasIndex("ProgrammeId");

                    b.ToTable("Student", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abstract")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DecisionState")
                        .HasColumnType("integer");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Publish")
                        .HasColumnType("boolean");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TransitionState")
                        .HasColumnType("integer");

                    b.Property<int>("Trip")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Submission", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.SubmissionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PartyId")
                        .HasColumnType("integer");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubmissionId");

                    b.ToTable("SubmissionHistory", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.ThesisAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Assessment")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Decision")
                        .HasColumnType("integer");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ReviewerType")
                        .HasColumnType("integer");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("integer");

                    b.Property<int>("Trip")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.HasIndex("SubmissionId");

                    b.ToTable("ThesisAssignment", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Version", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DocumentId")
                        .HasColumnType("integer");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherProperty1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.ToTable("Version", (string)null);
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.AcademicConfiguration", b =>
                {
                    b.OwnsOne("QIMSchoolPro.Thesis.Domain.ValueObjects.AcademicPeriod", "AcademicPeriod", b1 =>
                        {
                            b1.Property<int>("AcademicConfigurationId")
                                .HasColumnType("integer");

                            b1.Property<int>("LowerYear")
                                .HasColumnType("integer");

                            b1.Property<int>("Semester")
                                .HasColumnType("integer");

                            b1.Property<int>("UpperYear")
                                .HasColumnType("integer");

                            b1.HasKey("AcademicConfigurationId");

                            b1.ToTable("AcademicConfiguration");

                            b1.WithOwner()
                                .HasForeignKey("AcademicConfigurationId");
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("AcademicConfigurationId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("AcademicConfigurationId");

                            b1.ToTable("AcademicConfiguration");

                            b1.WithOwner()
                                .HasForeignKey("AcademicConfigurationId");
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.AcademicPeriodActivity", "OngoingActivity", b1 =>
                        {
                            b1.Property<int>("AcademicConfigurationId")
                                .HasColumnType("integer");

                            b1.Property<bool>("LecturerAssessment")
                                .HasColumnType("boolean");

                            b1.Property<bool>("SemesterRegistration")
                                .HasColumnType("boolean");

                            b1.Property<bool>("ShowResult")
                                .HasColumnType("boolean");

                            b1.HasKey("AcademicConfigurationId");

                            b1.ToTable("AcademicConfiguration");

                            b1.WithOwner()
                                .HasForeignKey("AcademicConfigurationId");
                        });

                    b.Navigation("AcademicPeriod")
                        .IsRequired();

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("OngoingActivity")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Certificate", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("CertificateId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("CertificateId");

                            b1.ToTable("Certificate");

                            b1.WithOwner()
                                .HasForeignKey("CertificateId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Department", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("DepartmentId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("DepartmentId");

                            b1.ToTable("Department");

                            b1.WithOwner()
                                .HasForeignKey("DepartmentId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Document", b =>
                {
                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.Submission", "Submission")
                        .WithMany("Documents")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("DocumentId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("DocumentId");

                            b1.ToTable("Document");

                            b1.WithOwner()
                                .HasForeignKey("DocumentId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.ExaminerReport", b =>
                {
                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.ThesisAssignment", "ThesisAssignment")
                        .WithMany("ExaminerReports")
                        .HasForeignKey("ThesisAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("ExaminerReportId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ExaminerReportId");

                            b1.ToTable("ExaminerReport");

                            b1.WithOwner()
                                .HasForeignKey("ExaminerReportId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("ThesisAssignment");
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Grade", b =>
                {
                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.GradeParam", "GradeParam")
                        .WithMany()
                        .HasForeignKey("GradeParamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.ThesisAssignment", "ThesisAssignment")
                        .WithMany("Grades")
                        .HasForeignKey("ThesisAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("GradeId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("GradeId");

                            b1.ToTable("Grade");

                            b1.WithOwner()
                                .HasForeignKey("GradeId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("GradeParam");

                    b.Navigation("ThesisAssignment");
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.GradeParam", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("GradeParamId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("GradeParamId");

                            b1.ToTable("GradeParam");

                            b1.WithOwner()
                                .HasForeignKey("GradeParamId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.OralExamination", b =>
                {
                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.Submission", "Submission")
                        .WithMany()
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("OralExaminationId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("OralExaminationId");

                            b1.ToTable("OralExamination");

                            b1.WithOwner()
                                .HasForeignKey("OralExaminationId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Party", b =>
                {
                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("PartyId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("PartyId");

                            b1.ToTable("Party");

                            b1.WithOwner()
                                .HasForeignKey("PartyId");
                        });

                    b.OwnsOne("QIMSchoolPro.Thesis.Domain.ValueObjects.EmailAddressValueType", "PrimaryEmailAddress", b1 =>
                        {
                            b1.Property<int>("PartyId")
                                .HasColumnType("integer");

                            b1.HasKey("PartyId");

                            b1.ToTable("Party");

                            b1.WithOwner()
                                .HasForeignKey("PartyId");

                            b1.OwnsOne("QIMSchoolPro.Thesis.Domain.ValueObjects.Email", "Email", b2 =>
                                {
                                    b2.Property<int>("EmailAddressValueTypePartyId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("EmailType")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("Email");

                                    b2.HasKey("EmailAddressValueTypePartyId");

                                    b2.ToTable("Party");

                                    b2.WithOwner()
                                        .HasForeignKey("EmailAddressValueTypePartyId");
                                });

                            b1.Navigation("Email")
                                .IsRequired();
                        });

                    b.OwnsOne("QIMSchoolPro.Thesis.Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<int>("PartyId")
                                .HasColumnType("integer");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("OtherName")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("PartyId");

                            b1.ToTable("Party");

                            b1.WithOwner()
                                .HasForeignKey("PartyId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Name")
                        .IsRequired();

                    b.Navigation("PrimaryEmailAddress")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Programme", b =>
                {
                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.Certificate", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("ProgrammeId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ProgrammeId");

                            b1.ToTable("Programme");

                            b1.WithOwner()
                                .HasForeignKey("ProgrammeId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Certificate");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Staff", b =>
                {
                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("StaffId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("StaffId");

                            b1.ToTable("Staff");

                            b1.WithOwner()
                                .HasForeignKey("StaffId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Student", b =>
                {
                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.Party", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.Programme", "Programme")
                        .WithMany()
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("QIMSchoolPro.Students.Domain.ValueObjects.YearGroup", "YearGroup", b1 =>
                        {
                            b1.Property<string>("StudentNumber")
                                .HasColumnType("text");

                            b1.Property<int>("AdmittedYear")
                                .HasColumnType("integer");

                            b1.Property<int>("ClassYear")
                                .HasColumnType("integer");

                            b1.HasKey("StudentNumber");

                            b1.ToTable("Student");

                            b1.WithOwner()
                                .HasForeignKey("StudentNumber");
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<string>("StudentNumber")
                                .HasColumnType("text");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("StudentNumber");

                            b1.ToTable("Student");

                            b1.WithOwner()
                                .HasForeignKey("StudentNumber");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Party");

                    b.Navigation("Programme");

                    b.Navigation("YearGroup")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Submission", b =>
                {
                    b.OwnsOne("QIMSchoolPro.Thesis.Domain.ValueObjects.AcademicPeriod", "AcademicPeriod", b1 =>
                        {
                            b1.Property<int>("SubmissionId")
                                .HasColumnType("integer");

                            b1.Property<int>("LowerYear")
                                .HasColumnType("integer");

                            b1.Property<int>("Semester")
                                .HasColumnType("integer");

                            b1.Property<int>("UpperYear")
                                .HasColumnType("integer");

                            b1.HasKey("SubmissionId");

                            b1.ToTable("Submission");

                            b1.WithOwner()
                                .HasForeignKey("SubmissionId");
                        });

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("SubmissionId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("SubmissionId");

                            b1.ToTable("Submission");

                            b1.WithOwner()
                                .HasForeignKey("SubmissionId");
                        });

                    b.Navigation("AcademicPeriod")
                        .IsRequired();

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.SubmissionHistory", b =>
                {
                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.Submission", null)
                        .WithMany("SubmissionHistories")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("SubmissionHistoryId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("SubmissionHistoryId");

                            b1.ToTable("SubmissionHistory");

                            b1.WithOwner()
                                .HasForeignKey("SubmissionHistoryId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.ThesisAssignment", b =>
                {
                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.Submission", "Submission")
                        .WithMany("ThesisAssignments")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("ThesisAssignmentId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ThesisAssignmentId");

                            b1.ToTable("ThesisAssignment");

                            b1.WithOwner()
                                .HasForeignKey("ThesisAssignmentId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();

                    b.Navigation("Staff");

                    b.Navigation("Submission");
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Version", b =>
                {
                    b.HasOne("QIMSchoolPro.Thesis.Domain.Entities.Document", null)
                        .WithMany("Versions")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Qface.Domain.Shared.ValueObjects.Audit", "Audit", b1 =>
                        {
                            b1.Property<int>("VersionId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("CreatedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatus")
                                .HasColumnType("text");

                            b1.Property<string>("EntityStatusCreateBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("EntityStatusCreated")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<DateTime?>("EntityStatusLastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("EntityStatusLastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<string>("LastModifiedBy")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("VersionId");

                            b1.ToTable("Version");

                            b1.WithOwner()
                                .HasForeignKey("VersionId");
                        });

                    b.Navigation("Audit")
                        .IsRequired();
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Document", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.Submission", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("SubmissionHistories");

                    b.Navigation("ThesisAssignments");
                });

            modelBuilder.Entity("QIMSchoolPro.Thesis.Domain.Entities.ThesisAssignment", b =>
                {
                    b.Navigation("ExaminerReports");

                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
